{"version":3,"file":"sdpi.js","mappings":"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","sources":["webpack://sdpi/./src/styles/index.css","webpack://sdpi/./node_modules/css-loader/dist/runtime/api.js","webpack://sdpi/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://sdpi/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://sdpi/./src/styles/index.css?6349","webpack://sdpi/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://sdpi/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://sdpi/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://sdpi/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://sdpi/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://sdpi/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://sdpi/./src/components/sdpi-button.ts","webpack://sdpi/./src/components/sdpi-color.ts","webpack://sdpi/./src/components/sdpi-content.ts","webpack://sdpi/./src/components/sdpi-element.ts","webpack://sdpi/./src/components/sdpi-input.ts","webpack://sdpi/./src/components/sdpi-range.ts","webpack://sdpi/./src/components/sdpi-select.ts","webpack://sdpi/./src/components/sdpi-text.ts","webpack://sdpi/./src/core/element.ts","webpack://sdpi/./src/core/event-dispatcher.ts","webpack://sdpi/./src/core/input.ts","webpack://sdpi/./src/core/promise-completion-source.ts","webpack://sdpi/./src/core/timeout.ts","webpack://sdpi/./src/core/utils.ts","webpack://sdpi/./src/stream-deck/connect.ts","webpack://sdpi/./src/stream-deck/store.ts","webpack://sdpi/./src/stream-deck/stream-deck-client.ts","webpack://sdpi/./src/stream-deck/stream-deck-connection.ts","webpack://sdpi/webpack/bootstrap","webpack://sdpi/webpack/runtime/compat get default export","webpack://sdpi/webpack/runtime/define property getters","webpack://sdpi/webpack/runtime/hasOwnProperty shorthand","webpack://sdpi/webpack/runtime/make namespace object","webpack://sdpi/webpack/runtime/jsonp chunk loading","webpack://sdpi/./src/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"48px\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"48px\\\" fill=\\\"%23d8d8d8\\\"><path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/><path d=\\\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\\\"/></svg>\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* https://9elements.com/css-rule-order/#:~:text=So%20the%20order%20is%3A%20position,text%2D*%20%2C%20then%20word%2D*%20. */\\r\\n\\r\\n:root {\\r\\n    /* Box model */\\r\\n    --spacer: 4px;\\r\\n    --label-column-width: 103px;\\r\\n    \\r\\n    /* Background and typography */\\r\\n    --color-primary: #9a9a9a;\\r\\n    --color-primary-bg: #2d2d2d;\\r\\n    --color-secondary: #d8d8d8;\\r\\n    --color-secondary-bg: #3d3d3d;\\r\\n    --color-input-bg: #969696;\\r\\n    --font-size: 8pt;\\r\\n}\\r\\n\\r\\nhtml, body {\\r\\n    /* Box model */\\r\\n    margin: 0;\\r\\n    padding-top: 2px;\\r\\n\\r\\n    /* Background and typography */\\r\\n    background-color: var(--color-primary-bg);\\r\\n    color: var(--color-primary);\\r\\n    font-size: var(--font-size);\\r\\n    font-weight: normal;\\r\\n    font-family: Tahoma, Verdana, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\r\\n}\\r\\n\\r\\n/* Scrollbar */\\r\\n::-webkit-scrollbar {\\r\\n    width: 8px;\\r\\n}\\r\\n::-webkit-scrollbar-track {\\r\\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n}\\r\\n::-webkit-scrollbar-thumb {\\r\\n    background-color: #999999;\\r\\n    outline: 1px solid slategrey;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n\\r\\n/* Elements */\\r\\np {\\r\\n    margin: 0 0 var(--spacer) 0;\\r\\n}\\r\\np:last-child {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nul, ol {\\r\\n    margin: var(--spacer) 0;\\r\\n    padding-left: calc(var(--spacer) * 6);\\r\\n}\\r\\nli {\\r\\n    line-height: 1.5em;\\r\\n}\\r\\n\\r\\n\\r\\n/* Layout */\\r\\n.container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n.row {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: nowrap;\\r\\n}\\r\\n.container > * > .row {\\r\\n    margin-bottom: calc(var(--spacer) * 2);\\r\\n}\\r\\n.row > * {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.col-1 { width: calc(100% / 12); }\\r\\n.col-2 { width: calc((100% / 12) * 2); }\\r\\n.col-3 { width: calc((100% / 12) * 3); }\\r\\n.col-4 { width: calc((100% / 12) * 4); }\\r\\n.col-5 { width: calc((100% / 12) * 5); }\\r\\n.col-6 { width: calc((100% / 12) * 6); }\\r\\n.col-7 { width: calc((100% / 12) * 7); }\\r\\n.col-8 { width: calc((100% / 12) * 8); }\\r\\n.col-9 { width: calc((100% / 12) * 9); }\\r\\n.col-10 { width: calc((100% / 12) * 10); }\\r\\n.col-11 { width: calc((100% / 12) * 11); }\\r\\n.col-12 { width: 100%; }\\r\\n\\r\\n.offset-1 { margin-left: calc(100% / 12); }\\r\\n.offset-2 { width: calc((100% / 12) * 2); }\\r\\n.offset-3 { width: calc((100% / 12) * 3); }\\r\\n.offset-4 { width: calc((100% / 12) * 4); }\\r\\n.offset-5 { width: calc((100% / 12) * 5); }\\r\\n.offset-6 { width: calc((100% / 12) * 6); }\\r\\n.offset-7 { width: calc((100% / 12) * 7); }\\r\\n.offset-8 { width: calc((100% / 12) * 8); }\\r\\n.offset-9 { width: calc((100% / 12) * 9); }\\r\\n.offset-10 { width: calc((100% / 12) * 10); }\\r\\n.offset-11 { width: calc((100% / 12) * 11); }\\r\\n\\r\\n.f-stretch { flex-grow: 1; }\\r\\n\\r\\n.a-center-center {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n/* Layout (SDPI) */\\r\\n.col-label\\r\\n{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: flex-end;\\r\\n    \\r\\n    width: var(--label-column-width);\\r\\n    padding-right: 11px;\\r\\n    \\r\\n    text-align: right;\\r\\n}\\r\\n.col-content {\\r\\n    margin-left: var(--label-column-width);\\r\\n    width: 227px;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.col-label + .col-content {\\r\\n    margin-left: 0;\\r\\n}\\r\\n\\r\\n\\r\\n/* Spacing */\\r\\n.p-0 { padding: 0; }\\r\\n.pt-0 { padding-top: 0; }\\r\\n.pr-0 { padding-right: 0; }\\r\\n.pb-0 { padding-bottom: 0; }\\r\\n.pl-0 { padding-left: 0; }\\r\\n\\r\\n.ps-2 {\\r\\n    padding-left: var(--spacer);\\r\\n    padding-right: var(--spacer);\\r\\n}\\r\\n\\r\\n.mr-2 { margin-right: calc(var(--spacer) * 2); }\\r\\n.mr-3 { margin-right: calc(var(--spacer) * 3); }\\r\\n\\r\\n.ml-2 { margin-left: calc(var(--spacer) * 2); }\\r\\n.ml-3 { margin-left: calc(var(--spacer) * 3); }\\r\\n\\r\\n/* Background and typography */\\r\\n.hidden {\\r\\n    display: none;\\r\\n    visibility: collapse;\\r\\n}\\r\\n\\r\\n:disabled {\\r\\n    cursor: default;\\r\\n    opacity: 0.5;\\r\\n}\\r\\n\\r\\n.refresh-icon,\\r\\n.refresh-icon:active {\\r\\n    height: 24px;\\r\\n    width: 24px;\\r\\n    \\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.text-right { text-align: right; }\\r\\n.text-center { text-align: center; }\\r\\n\\r\\n/* Form */\\r\\nbutton,\\r\\ninput,\\r\\nselect\\r\\n{\\r\\n    /* Box model */\\r\\n    box-sizing: border-box;\\r\\n    outline: none;\\r\\n    border: none;\\r\\n    border-radius: 0;\\r\\n    min-width: 100%;\\r\\n    max-width: 100%;\\r\\n\\r\\n    /* Background and typography */\\r\\n    color: var(--color-secondary);\\r\\n    font-size: var(--font-size);\\r\\n}\\r\\nbutton,\\r\\ninput:not([type='range']),\\r\\nselect {\\r\\n    background-color: var(--color-secondary-bg);\\r\\n}\\r\\ninput[type=\\\"text\\\"]\\r\\n{\\r\\n    padding: calc(var(--spacer) + 2px) var(--spacer);\\r\\n}\\r\\nselect\\r\\n{\\r\\n    /* Clipping */\\r\\n    text-overflow: ellipsis;\\r\\n\\r\\n    /* Box model */\\r\\n    padding: calc(var(--spacer) + 1px) 0;\\r\\n}\\r\\n\\r\\nbutton,\\r\\ninput[type=\\\"button\\\"],\\r\\ninput[type=\\\"submit\\\"] {\\r\\n    /* Box model */\\r\\n    border: solid 1px var(--color-primary);\\r\\n    border-radius: var(--spacer);\\r\\n    padding: calc(var(--spacer) + 1px) calc(var(--spacer) * 2);\\r\\n\\r\\n    /* Background and typography */\\r\\n    background-color: var(--color-secondary-bg);\\r\\n    color: var(--color-secondary);\\r\\n}\\r\\n\\r\\nbutton:hover:not(:disabled),\\r\\ninput[type=\\\"button\\\"]:hover:not(:disabled),\\r\\ninput[type=\\\"submit\\\"]:hover:not(:disabled) {\\r\\n    border: solid 1px var(--color-secondary);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton:active,\\r\\ninput[type=\\\"button\\\"]:active,\\r\\ninput[type=\\\"submit\\\"]:active {\\r\\n    border: default;\\r\\n    background-color: var(--color-primary-bg);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"] {\\r\\n    -webkit-appearance: none;\\r\\n    margin: 0;\\r\\n    height: 22px;\\r\\n    background-color: transparent;\\r\\n}\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-runnable-track {\\r\\n    margin-top: 2px;\\r\\n    height: 5px;\\r\\n    padding: 0px !important;\\r\\n\\r\\n    border: solid 1px var(--color-secondary-bg);\\r\\n    background: var(--color-input-bg);\\r\\n    border-radius: 3px;\\r\\n}\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n    -webkit-appearance: none;\\r\\n    position: relative;\\r\\n    top: -4px;\\r\\n    \\r\\n    width: 12px;\\r\\n    height: 12px;\\r\\n    border-radius: 20px;\\r\\n    \\r\\n    cursor: pointer;\\r\\n    background-color: var(--color-secondary);\\r\\n}\\r\\ninput[type=\\\"range\\\"]:disabled::-webkit-slider-thumb {\\r\\n    cursor: default;\\r\\n}\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb::before {\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/index.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* https://9elements.com/css-rule-order/#:~:text=So%20the%20order%20is%3A%20position,text%2D*%20%2C%20then%20word%2D*%20. */\\r\\n\\r\\n:root {\\r\\n    /* Box model */\\r\\n    --spacer: 4px;\\r\\n    --label-column-width: 103px;\\r\\n    \\r\\n    /* Background and typography */\\r\\n    --color-primary: #9a9a9a;\\r\\n    --color-primary-bg: #2d2d2d;\\r\\n    --color-secondary: #d8d8d8;\\r\\n    --color-secondary-bg: #3d3d3d;\\r\\n    --color-input-bg: #969696;\\r\\n    --font-size: 8pt;\\r\\n}\\r\\n\\r\\nhtml, body {\\r\\n    /* Box model */\\r\\n    margin: 0;\\r\\n    padding-top: 2px;\\r\\n\\r\\n    /* Background and typography */\\r\\n    background-color: var(--color-primary-bg);\\r\\n    color: var(--color-primary);\\r\\n    font-size: var(--font-size);\\r\\n    font-weight: normal;\\r\\n    font-family: Tahoma, Verdana, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\r\\n}\\r\\n\\r\\n/* Scrollbar */\\r\\n::-webkit-scrollbar {\\r\\n    width: 8px;\\r\\n}\\r\\n::-webkit-scrollbar-track {\\r\\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n}\\r\\n::-webkit-scrollbar-thumb {\\r\\n    background-color: #999999;\\r\\n    outline: 1px solid slategrey;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n\\r\\n/* Elements */\\r\\np {\\r\\n    margin: 0 0 var(--spacer) 0;\\r\\n}\\r\\np:last-child {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nul, ol {\\r\\n    margin: var(--spacer) 0;\\r\\n    padding-left: calc(var(--spacer) * 6);\\r\\n}\\r\\nli {\\r\\n    line-height: 1.5em;\\r\\n}\\r\\n\\r\\n\\r\\n/* Layout */\\r\\n.container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n.row {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: nowrap;\\r\\n}\\r\\n.container > * > .row {\\r\\n    margin-bottom: calc(var(--spacer) * 2);\\r\\n}\\r\\n.row > * {\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.col-1 { width: calc(100% / 12); }\\r\\n.col-2 { width: calc((100% / 12) * 2); }\\r\\n.col-3 { width: calc((100% / 12) * 3); }\\r\\n.col-4 { width: calc((100% / 12) * 4); }\\r\\n.col-5 { width: calc((100% / 12) * 5); }\\r\\n.col-6 { width: calc((100% / 12) * 6); }\\r\\n.col-7 { width: calc((100% / 12) * 7); }\\r\\n.col-8 { width: calc((100% / 12) * 8); }\\r\\n.col-9 { width: calc((100% / 12) * 9); }\\r\\n.col-10 { width: calc((100% / 12) * 10); }\\r\\n.col-11 { width: calc((100% / 12) * 11); }\\r\\n.col-12 { width: 100%; }\\r\\n\\r\\n.offset-1 { margin-left: calc(100% / 12); }\\r\\n.offset-2 { width: calc((100% / 12) * 2); }\\r\\n.offset-3 { width: calc((100% / 12) * 3); }\\r\\n.offset-4 { width: calc((100% / 12) * 4); }\\r\\n.offset-5 { width: calc((100% / 12) * 5); }\\r\\n.offset-6 { width: calc((100% / 12) * 6); }\\r\\n.offset-7 { width: calc((100% / 12) * 7); }\\r\\n.offset-8 { width: calc((100% / 12) * 8); }\\r\\n.offset-9 { width: calc((100% / 12) * 9); }\\r\\n.offset-10 { width: calc((100% / 12) * 10); }\\r\\n.offset-11 { width: calc((100% / 12) * 11); }\\r\\n\\r\\n.f-stretch { flex-grow: 1; }\\r\\n\\r\\n.a-center-center {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n/* Layout (SDPI) */\\r\\n.col-label\\r\\n{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: flex-end;\\r\\n    \\r\\n    width: var(--label-column-width);\\r\\n    padding-right: 11px;\\r\\n    \\r\\n    text-align: right;\\r\\n}\\r\\n.col-content {\\r\\n    margin-left: var(--label-column-width);\\r\\n    width: 227px;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.col-label + .col-content {\\r\\n    margin-left: 0;\\r\\n}\\r\\n\\r\\n\\r\\n/* Spacing */\\r\\n.p-0 { padding: 0; }\\r\\n.pt-0 { padding-top: 0; }\\r\\n.pr-0 { padding-right: 0; }\\r\\n.pb-0 { padding-bottom: 0; }\\r\\n.pl-0 { padding-left: 0; }\\r\\n\\r\\n.ps-2 {\\r\\n    padding-left: var(--spacer);\\r\\n    padding-right: var(--spacer);\\r\\n}\\r\\n\\r\\n.mr-2 { margin-right: calc(var(--spacer) * 2); }\\r\\n.mr-3 { margin-right: calc(var(--spacer) * 3); }\\r\\n\\r\\n.ml-2 { margin-left: calc(var(--spacer) * 2); }\\r\\n.ml-3 { margin-left: calc(var(--spacer) * 3); }\\r\\n\\r\\n/* Background and typography */\\r\\n.hidden {\\r\\n    display: none;\\r\\n    visibility: collapse;\\r\\n}\\r\\n\\r\\n:disabled {\\r\\n    cursor: default;\\r\\n    opacity: 0.5;\\r\\n}\\r\\n\\r\\n.refresh-icon,\\r\\n.refresh-icon:active {\\r\\n    height: 24px;\\r\\n    width: 24px;\\r\\n    \\r\\n    background-image: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"48px\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"48px\\\" fill=\\\"%23d8d8d8\\\"><path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/><path d=\\\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\\\"/></svg>');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.text-right { text-align: right; }\\r\\n.text-center { text-align: center; }\\r\\n\\r\\n/* Form */\\r\\nbutton,\\r\\ninput,\\r\\nselect\\r\\n{\\r\\n    /* Box model */\\r\\n    box-sizing: border-box;\\r\\n    outline: none;\\r\\n    border: none;\\r\\n    border-radius: 0;\\r\\n    min-width: 100%;\\r\\n    max-width: 100%;\\r\\n\\r\\n    /* Background and typography */\\r\\n    color: var(--color-secondary);\\r\\n    font-size: var(--font-size);\\r\\n}\\r\\nbutton,\\r\\ninput:not([type='range']),\\r\\nselect {\\r\\n    background-color: var(--color-secondary-bg);\\r\\n}\\r\\ninput[type=\\\"text\\\"]\\r\\n{\\r\\n    padding: calc(var(--spacer) + 2px) var(--spacer);\\r\\n}\\r\\nselect\\r\\n{\\r\\n    /* Clipping */\\r\\n    text-overflow: ellipsis;\\r\\n\\r\\n    /* Box model */\\r\\n    padding: calc(var(--spacer) + 1px) 0;\\r\\n}\\r\\n\\r\\nbutton,\\r\\ninput[type=\\\"button\\\"],\\r\\ninput[type=\\\"submit\\\"] {\\r\\n    /* Box model */\\r\\n    border: solid 1px var(--color-primary);\\r\\n    border-radius: var(--spacer);\\r\\n    padding: calc(var(--spacer) + 1px) calc(var(--spacer) * 2);\\r\\n\\r\\n    /* Background and typography */\\r\\n    background-color: var(--color-secondary-bg);\\r\\n    color: var(--color-secondary);\\r\\n}\\r\\n\\r\\nbutton:hover:not(:disabled),\\r\\ninput[type=\\\"button\\\"]:hover:not(:disabled),\\r\\ninput[type=\\\"submit\\\"]:hover:not(:disabled) {\\r\\n    border: solid 1px var(--color-secondary);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton:active,\\r\\ninput[type=\\\"button\\\"]:active,\\r\\ninput[type=\\\"submit\\\"]:active {\\r\\n    border: default;\\r\\n    background-color: var(--color-primary-bg);\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"] {\\r\\n    -webkit-appearance: none;\\r\\n    margin: 0;\\r\\n    height: 22px;\\r\\n    background-color: transparent;\\r\\n}\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-runnable-track {\\r\\n    margin-top: 2px;\\r\\n    height: 5px;\\r\\n    padding: 0px !important;\\r\\n\\r\\n    border: solid 1px var(--color-secondary-bg);\\r\\n    background: var(--color-input-bg);\\r\\n    border-radius: 3px;\\r\\n}\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n    -webkit-appearance: none;\\r\\n    position: relative;\\r\\n    top: -4px;\\r\\n    \\r\\n    width: 12px;\\r\\n    height: 12px;\\r\\n    border-radius: 20px;\\r\\n    \\r\\n    cursor: pointer;\\r\\n    background-color: var(--color-secondary);\\r\\n}\\r\\ninput[type=\\\"range\\\"]:disabled::-webkit-slider-thumb {\\r\\n    cursor: default;\\r\\n}\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb::before {\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","import { cloneAttributeOrDefault } from '../core/element';\r\nimport SDPIInput from './sdpi-input';\r\n\r\nexport default class SDPIButton extends SDPIInput<HTMLInputElement> {\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        this.input = document.createElement('input');\r\n        this.input.setAttribute('type', 'button');\r\n\r\n        cloneAttributeOrDefault(this, this.input, 'value');\r\n        this.input.onclick = this.onclick;\r\n\r\n        root.appendChild(this.input);\r\n        super.render && super.render(root);\r\n    }\r\n}\r\n\r\ncustomElements.define('sdpi-button', SDPIButton);\r\n","import SDPIInput from './sdpi-input';\r\n\r\nexport default class SDPIColor extends SDPIInput<HTMLInputElement> {\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        this.input = document.createElement('input');\r\n        this.input.setAttribute('type', 'color');\r\n\r\n        root.appendChild(this.input);\r\n        super.render(root);\r\n    }\r\n}\r\n\r\ncustomElements.define('sdpi-color', SDPIColor);\r\n","import { observeChildList, withAttribute } from '../core/element';\r\nimport SDPIElement from './sdpi-element';\r\n\r\nexport default class SDPIContent extends SDPIElement {\r\n    private readonly container: HTMLElement = document.createElement('div');\r\n    private readonly text: HTMLElement = document.createElement('p');\r\n\r\n    /* Gets the observed attributes */\r\n    public static get observedAttributes(): string[] {\r\n        return super.observedAttributes.concat(['text']);\r\n    }\r\n\r\n    /**\r\n     * Called when an observed attribute has been added, removed, updated, or replaced. Also called for initial values when an element is created by the parser, or upgraded. Note: only attributes listed in the observedAttributes property will receive this callback.\r\n     * @param attrName The attribute name.\r\n     * @param oldValue The attributes old value.\r\n     * @param newValue The attributes new value.\r\n     */\r\n    public attributeChangedCallback(attrName: string, oldValue: string | null, newValue: string | null): void {\r\n        super.attributeChangedCallback(attrName, oldValue, newValue);\r\n\r\n        if (attrName === 'text') {\r\n            this.text.innerText = newValue || '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        withAttribute(this, 'text', value => this.text.innerText = value);\r\n\r\n        this.container.appendChild(this.text);\r\n        root.appendChild(this.container);\r\n    }\r\n}\r\n\r\ncustomElements.define('sdpi-content', SDPIContent);\r\n","import { createElement, withAttribute } from '../core/element';\r\n\r\n/**\r\n * Provides a base class for all elements within the Stream Deck Property Inspector.\r\n */\r\nexport default class SDPIElement extends HTMLElement {\r\n    protected readonly label: HTMLLabelElement = document.createElement('label');\r\n\r\n    /* Gets the observed attributes. */\r\n    public static get observedAttributes(): string[] {\r\n        return ['label'];\r\n    }\r\n\r\n    /* Gets the disabled state of this instance. */\r\n    public get disabled(): boolean {\r\n        return this.getAttribute('disabled') != undefined;\r\n    }\r\n\r\n    /* Sets the disabled state of this instance. */;\r\n    public set disabled(value: boolean) {\r\n        if (value) {\r\n            this.setAttribute('disabled', 'disabled');\r\n        } else {\r\n            this.removeAttribute('disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an observed attribute has been added, removed, updated, or replaced. Also called for initial values when an element is created by the parser, or upgraded. Note: only attributes listed in the observedAttributes property will receive this callback.\r\n     * @param attrName The attribute name.\r\n     * @param oldValue The attributes old value.\r\n     * @param newValue The attributes new value.\r\n     */\r\n    public attributeChangedCallback(attrName: string, oldValue: string | null, newValue: string | null): void {\r\n        if (attrName == 'label') {\r\n            this.label.innerText = newValue || '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoked each time the custom element is appended into a document-connected element\r\n     */\r\n    public connectedCallback(): void {\r\n        // Label and primary content column\r\n        const labelColumn = createElement('div', ['col-label'], [this.label]);\r\n        withAttribute(this, 'label', value => this.label.innerText = `${value}: `);\r\n        const contentColumn = createElement('div', ['col-content']);\r\n\r\n        // Container row.\r\n        this.appendChild(createElement('div', ['row'], [labelColumn, contentColumn]));\r\n        this.render && this.render(contentColumn);\r\n    }\r\n\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render?(root: HTMLElement): void;\r\n}","import { setAttribute } from '../core/element';\r\nimport EventManager, { IEventSubscriber } from '../core/event-dispatcher';\r\nimport { HTMLInput } from '../core/input';\r\nimport store, { IStoreObject } from '../stream-deck/store';\r\nimport SDPIElement from './sdpi-element';\r\n\r\n/**\r\n * Provides a base component that represents an SDPI input.\r\n */\r\nexport default class SDPIInput<T extends HTMLInput> extends SDPIElement implements IStoreObject {\r\n    protected input?: T;\r\n    private _change: EventManager<void> = new EventManager();\r\n    private _value?: any;\r\n\r\n    /* Gets the observed attributes that are mapped directly to the input. */\r\n    public static get observedInputAttributes(): string[] {\r\n        return ['disabled'];\r\n    }\r\n\r\n    /* Gets the observed attributes */\r\n    public static get observedAttributes(): string[] {\r\n        return super.observedAttributes.concat(this.observedInputAttributes);\r\n    }\r\n\r\n    /* Occurs when the value changes. */\r\n    public get change(): IEventSubscriber<void> {\r\n        return this._change;\r\n    }\r\n\r\n    /* Gets the value that determines whether saving should be delayed; this typically applies to inputs that can change frequently. */\r\n    public get isDelayed(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /* Gets the value that the input represents. */\r\n    public get value(): any {\r\n        return this._value;\r\n    }\r\n\r\n    /* Set the value that the input represents, and dispatches a change event */\r\n    public set value(value: any) {\r\n        if (this._value != value || (this.input && this.input.value != value)) {\r\n            this._value = value;\r\n            if (this.input) {\r\n                this.input.value = value;\r\n            }\r\n\r\n            this._change.dispatch();\r\n        }\r\n    }\r\n\r\n    /* Gets a value determining whether the persisted value is a global setting */\r\n    protected get global(): boolean {\r\n        return this.hasAttribute('global');\r\n    }\r\n\r\n    /**\r\n     * Called when an observed attribute has been added, removed, updated, or replaced. Also called for initial values when an element is created by the parser, or upgraded. Note: only attributes listed in the observedAttributes property will receive this callback.\r\n     * @param attrName The attribute name.\r\n     * @param oldValue The attributes old value.\r\n     * @param newValue The attributes new value.\r\n     */\r\n    public attributeChangedCallback(attrName: string, oldValue: string | null, newValue: string | null): void {\r\n        super.attributeChangedCallback(attrName, oldValue, newValue);\r\n\r\n        if (SDPIInput.observedAttributes.indexOf(attrName) > -1) {\r\n            setAttribute(this.input, attrName, newValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        super.render && super.render(root);\r\n\r\n        // Setup the store when there is an id, and the input has been set.\r\n        if (this.input) {\r\n            this.input.addEventListener('change', () => this.value = this.input?.value);\r\n\r\n            const propertyName = this.getAttribute('property');\r\n            if (propertyName) {\r\n                this.input.id = `sdpi__${propertyName}`;\r\n                this.label.htmlFor = this.input.id;\r\n\r\n                store.use(this, propertyName, this.global, this.isDelayed ? 250 : undefined);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { cloneAttributeOrDefault, createElement, withAttribute } from '../core/element';\r\nimport SDPIInput from './sdpi-input';\r\n\r\nexport default class SDPIRange extends SDPIInput<HTMLInputElement> {\r\n    /* Gets the observed attributes. */\r\n    public static get observedInputAttributes(): string[] {\r\n        return super.observedInputAttributes.concat(['min', 'max', 'step']);\r\n    }\r\n\r\n    /* Gets the value that determines whether saving should be delayed; this typically applies to inputs that can change frequently. */\r\n    public get isDelayed(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        // Min value text.\r\n        let components: HTMLElement[] = [];\r\n        withAttribute(this, 'mintext', value => {\r\n            const minText = createElement('div', ['col', 'a-center-center', 'mr-2']);\r\n            minText.innerText = value;\r\n\r\n            components.push(minText);\r\n        });\r\n\r\n        // The range input.\r\n        this.input = document.createElement('input');\r\n        this.input.setAttribute('type', 'range');\r\n\r\n        cloneAttributeOrDefault(this, this.input, 'min', '0');\r\n        cloneAttributeOrDefault(this, this.input, 'max', '100');\r\n        cloneAttributeOrDefault(this, this.input, 'step', '5');\r\n        components.push(createElement('div', ['col', 'f-stretch'], [this.input]))\r\n\r\n        // Max value text.\r\n        withAttribute(this, 'maxtext', value => {\r\n            const maxText = createElement('div', ['col', 'a-center-center', 'ml-2']);\r\n            maxText.innerText = value;\r\n\r\n            components.push(maxText);\r\n        })\r\n\r\n        // Current value text.\r\n        withAttribute(this, 'showvalue', _ => {\r\n            const valueText = createElement('div', ['col', 'a-center-center', 'ml-2']);\r\n            this.input!.addEventListener('input', () => valueText.innerText = `${this.input!.value}%`);\r\n            this.change.subscribe(() => valueText.innerText = `${this.value}%`);\r\n\r\n            components.push(valueText);\r\n        });\r\n\r\n        root.appendChild(createElement('div', 'row', components));\r\n        super.render(root);\r\n    }\r\n}\r\n\r\ncustomElements.define('sdpi-range', SDPIRange);\r\n","import { createElement, observeChildList } from '../core/element';\r\nimport { clearOptions, createOption, createOptionGroup, setOnlyOption } from '../core/input';\r\nimport streamDeckClient from '../stream-deck/stream-deck-client';\r\nimport SDPIInput from './sdpi-input';\r\n\r\ninterface Option {\r\n    children?: Option[];\r\n    label: string;\r\n    value?: string;\r\n}\r\n\r\nexport default class SDPISelect extends SDPIInput<HTMLSelectElement> {\r\n    private _disabled: boolean = false;\r\n    private refreshButton?: HTMLButtonElement;\r\n\r\n    /* Gets the disabled state of this component */\r\n    public get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    /* Sets the input, and refresh button, to disabled */\r\n    public set disabled(value: boolean) {\r\n        if (this.input) {\r\n            this.input.disabled = value;\r\n        }\r\n\r\n        if (this.refreshButton) {\r\n            this.refreshButton.disabled = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invokes a refresh of the drop down.\r\n     */\r\n    public refresh(): void {\r\n        if (this.refreshButton) {\r\n            this.refreshButton.click();\r\n        } else {\r\n            const dataSourceEndpoint = this.getAttribute('datasource');\r\n            if (dataSourceEndpoint) {\r\n                this.loadOptions(dataSourceEndpoint);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        this.input = document.createElement('select');\r\n\r\n        // Determine if we should show a refresh button.\r\n        const refreshEndpoint = this.getAttribute('refresh');\r\n        if (refreshEndpoint) {\r\n            this.refreshButton = createElement('button', ['refresh-icon']);\r\n            root.appendChild(createElement(\r\n                'div',\r\n                'row',\r\n                [\r\n                    createElement('div', ['col', 'f-stretch'], [this.input]),\r\n                    createElement('div', ['col', 'ml-2'], [this.refreshButton])\r\n                ]));\r\n\r\n            this.refreshButton.addEventListener('click', () => this.loadOptions(refreshEndpoint));\r\n        } else {\r\n            root.appendChild(this.input);\r\n        }\r\n\r\n        // Determine how we should populate the select input.\r\n        const dataSourceEndpoint = this.getAttribute('datasource');\r\n        if (dataSourceEndpoint) {\r\n            this.loadOptions(dataSourceEndpoint);\r\n        } else {\r\n            observeChildList(this, (added: Node) => this.input?.appendChild(added), 'OPTGROUP', 'OPTION');\r\n        }\r\n\r\n        super.render(root);\r\n    }\r\n\r\n    /**\r\n     * Loads the options from the specified data source, and populates the input.\r\n     * @param dataSourceEndpoint The name of the endpoint to retrieve the options from.\r\n     */\r\n    private async loadOptions(dataSourceEndpoint: string): Promise<void> {\r\n        if (!this.input) {\r\n            return;\r\n        }\r\n\r\n        // Load the options.\r\n        const request = streamDeckClient.get<Option[]>(dataSourceEndpoint);\r\n        this.disabled = true;\r\n        setOnlyOption(this.input, 'Loading...');\r\n\r\n        // Set the options.\r\n        const dataSource = await request;\r\n        if (dataSource.payload && dataSource.payload.data) {\r\n            this.setOptions(<Option[]>dataSource.payload.data);\r\n        } else {\r\n            setOnlyOption(this.input, 'Failed to load');\r\n        }\r\n\r\n        this.disabled = false;\r\n\r\n    }\r\n\r\n    /**\r\n     * Sets the options of the input to the specified options.\r\n     * @param options The options.\r\n     */\r\n    private setOptions(options?: Option[]): void {\r\n        if (!this.input || !options) {\r\n            return;\r\n        }\r\n\r\n        const mapOptions = (item: Option): HTMLOptGroupElement | HTMLOptionElement => {\r\n            return item.children && item.children instanceof Array\r\n                ? createOptionGroup(item.label, item.children?.map(mapOptions))\r\n                : createOption(item.label, item.value);\r\n        }\r\n\r\n        clearOptions(this.input);\r\n        options.map(mapOptions).forEach(option => this.input?.options.add(option));\r\n\r\n        this.input.value = this.value || this.getAttribute('default');\r\n    }\r\n}\r\n\r\ncustomElements.define('sdpi-select', SDPISelect);\r\n","import SDPIInput from './sdpi-input';\r\n\r\nexport default class SDPIText extends SDPIInput<HTMLInputElement> {\r\n    /* Gets the value that determines whether saving should be delayed; this typically applies to inputs that can change frequently. */\r\n    public get isDelayed(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Allows for bespoke rendering to the specified root element.\r\n     * @param root The root element to append items to.\r\n     */\r\n    protected render(root: HTMLElement): void {\r\n        this.input = document.createElement('input');\r\n        this.input.setAttribute('type', 'text');\r\n\r\n        root.appendChild(this.input);\r\n        super.render(root);\r\n    }\r\n}\r\n\r\ncustomElements.define('sdpi-text', SDPIText);\r\n","/**\r\n * Creates a new element.\r\n * @param tagName The elements tag name.\r\n * @param className The optional class name of the element.\r\n * @param children The optional children to append to the element.\r\n * @returns The element.\r\n */\r\nexport function createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, classNames?: string | string[], children?: HTMLElement[]): HTMLElementTagNameMap[K] {\r\n    const element = document.createElement(tagName);\r\n\r\n    if (classNames) {\r\n        if (typeof classNames === 'string') {\r\n            element.classList.add(classNames);\r\n        } else {\r\n            classNames.forEach(className => element.classList.add(className));\r\n        }\r\n    }\r\n\r\n    (children ?? []).forEach(child => element.appendChild(child));\r\n    return element;\r\n}\r\n\r\n/**\r\n * Clones the attribute value from the source to the target; falls back to default value when specified, and the attribute was not found.\r\n * @param source The source element.\r\n * @param target The target element.\r\n * @param attrName The attribute name.\r\n * @param defaultValue The optional default value.\r\n */\r\nexport function cloneAttributeOrDefault(source: HTMLElement, target: HTMLElement, attrName: string, defaultValue?: string | undefined): void {\r\n    const value = source.getAttribute(attrName);\r\n    if (value) {\r\n        target.setAttribute(attrName, value);\r\n    } else if (defaultValue) {\r\n        target.setAttribute(attrName, defaultValue);\r\n    }\r\n}\r\n\r\n/**\r\n * Observes the child list of the target.\r\n * @param target The target node to observe.\r\n * @param addedCallback The callback invoked when nodes were added.\r\n * @param filter The filter that defines the node list to invoke the added callback for.\r\n */\r\nexport function observeChildList(target: Node, addedCallback: (node: Node) => void, ...filter: string[]): void {\r\n    new MutationObserver((mutations: MutationRecord[]) => {\r\n        mutations.forEach(mutation => mutation.addedNodes.forEach(node => {\r\n            if (filter.includes(node.nodeName)) {\r\n                addedCallback(node);\r\n            }\r\n        }));\r\n    }).observe(target, { childList: true });\r\n}\r\n\r\n/**\r\n * Sets the attribute when the value is defined; otherwise the attribute is removed.\r\n * @param target The target element to update.\r\n * @param attrName The name of the attribute.\r\n * @param value The optional attribute value.\r\n */\r\nexport function setAttribute(target?: HTMLElement, attrName?: string, value?: string | null): void {\r\n    if (target && attrName) {\r\n        if (value) {\r\n            target.setAttribute(attrName, value);\r\n        } else {\r\n            target.removeAttribute(attrName);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Invokes the action when the element contains the attribute.\r\n * @param element The element used to determine if the attribute exists.\r\n * @param attrName The attribute name.\r\n * @param success The action to invoke when the attribute present.\r\n * @param failure The action to invoke when the attribute was not present.\r\n */\r\nexport function withAttribute(element: HTMLElement, attrName: string, success?: (value: string) => void, failure?: () => void): void {\r\n    const value = element.getAttribute(attrName);\r\n    if (value) {\r\n        success && success(value);\r\n    } else {\r\n        failure && failure();\r\n    }\r\n}\r\n","/**\r\n * Provides an event dispatcher whereby handlers can subscribe to events that are later dispatched.\r\n */\r\nexport default class EventManager<T> implements IEventDispatcher<T>, IEventSubscriber<T> {\r\n    private handlers: IEventHandler<T>[] = [];\r\n    \r\n    /**\r\n     * Dispatches the event for all handlers.\r\n     * @param args The arguments to invoke each handler with.\r\n     */\r\n    public dispatch(args: T): void {\r\n        for (const handler of this.handlers) {\r\n            handler(args);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Subscribes the handler to the event.\r\n     * @param {IEventHandler<T>} handler The handler to add.\r\n     */\r\n    public subscribe(handler: IEventHandler<T>): void {\r\n        this.handlers.push(handler);\r\n    }\r\n\r\n    /**\r\n     * Unsubscribes the handler from the event.\r\n     * @param {IEventHandler<T>} handler The handler to remove.\r\n     */\r\n    public unsubscribe(handler: IEventHandler<T>): void {\r\n        this.handlers = this.handlers.filter(h => h !== handler);\r\n    }\r\n}\r\n\r\n/* An event subscriber */\r\nexport interface IEventSubscriber<T> {\r\n    subscribe(handler: IEventHandler<T>): void;\r\n    unsubscribe(handler: IEventHandler<T>): void\r\n}\r\n\r\n/* An event dispatcher */\r\nexport interface IEventDispatcher<T> {\r\n    dispatch(args: T): void;\r\n}\r\n\r\n/* An event handler */\r\nexport interface IEventHandler<T> {\r\n    (args: T): void;\r\n}\r\n","export type HTMLInput\r\n    = HTMLButtonElement\r\n    | HTMLInputElement\r\n    | HTMLSelectElement\r\n    | HTMLTextAreaElement;\r\n\r\n/**\r\n * Registers the event listener to change and input events.\r\n * @param input The input to monitor.\r\n * @param listener The event listener.\r\n */\r\nexport function anyChange(input: HTMLInput, listener: EventListenerOrEventListenerObject) {\r\n    input.addEventListener('change', listener);\r\n    input.addEventListener('input', listener);\r\n}\r\n\r\n/**\r\n * Removes all options from the input.\r\n * @param input The input.\r\n */\r\nexport function clearOptions(input: HTMLSelectElement): void {\r\n    if (input.childNodes) {\r\n        while (input.firstChild) {\r\n            input.removeChild(input.firstChild);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new option element.\r\n * @param text The option text.\r\n * @param value The option value.\r\n * @returns The option.\r\n */\r\nexport function createOption(text: string, value?: any): HTMLOptionElement {\r\n    const option = document.createElement('option');\r\n    option.text = text;\r\n    option.value = value;\r\n\r\n    return option;\r\n}\r\n\r\n/**\r\n * Creates a new option group element.\r\n * @param label The option group label.\r\n * @param children The optional children.\r\n * @returns The option group.\r\n */\r\nexport function createOptionGroup(label: string, children?: HTMLOptGroupElement[] | HTMLOptionElement[]): HTMLOptGroupElement {\r\n    const optGroup = document.createElement('optgroup');\r\n    optGroup.label = label;\r\n\r\n    if (children) {\r\n        children.forEach(child => optGroup.appendChild(child));\r\n    }\r\n\r\n    return optGroup;\r\n}\r\n\r\n/**\r\n * Dispatches the change event.\r\n * @param input The input to dispatch the change event on.\r\n */\r\nexport function dispatchChange(input: HTMLInput) {\r\n    input.dispatchEvent(new Event('change'));\r\n}\r\n\r\n/**\r\n * Removes all items within the select element, and appends the sole option.\r\n * @param input The select input to amend.\r\n * @param label The label of the only option.\r\n */\r\nexport function setOnlyOption(input: HTMLSelectElement, label: string) {\r\n    clearOptions(input);\r\n\r\n    input.options.add(createOption(label, ''));\r\n    input.value = '';\r\n}\r\n","/**\r\n * Provides a promise completion source whereby a promise can be resolved at a later stage.\r\n */\r\nexport default class PromiseCompletionSource<T> {\r\n    private readonly _promise: Promise<T>;\r\n\r\n    /**\r\n     * Initializes a new instance of a promise completion source.\r\n     */\r\n    constructor() {\r\n        this._promise = new Promise<T>((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n\r\n    private reject: (reason?: any) => void = _ => { };\r\n    private resolve: (value: T | PromiseLike<T>) => void = _ => { };\r\n\r\n    /**\r\n     * Gets the promise.\r\n     */\r\n    public get promise(): Promise<T> {\r\n        return this._promise;\r\n    }\r\n\r\n    /**\r\n     * Sets the result of the inner promise.\r\n     * @param value The value.\r\n     */\r\n    public setResult(value: T | PromiseLike<T>): void {\r\n        this.resolve(value);\r\n    }\r\n\r\n    /**\r\n     * Rejects the inner promise.\r\n     * @param reason The reason.\r\n     */\r\n    public setException(reason?: any): void {\r\n        this.reject(reason);\r\n    }\r\n}\r\n","/**\r\n * A helper method for triggering and delaying a timeout.\r\n * @param callback The callback to invoke when the timeout expires.\r\n * @param timeout The timeout duration.\r\n */\r\nexport function delay(callback: () => void, timeout: number): () => void {\r\n    let handle: number | undefined;\r\n    return (...args: any[]) => {\r\n        clearTimeout(handle);\r\n        handle = setTimeout(callback, timeout, args);\r\n    };\r\n}\r\n","/**\r\n * Generates a \"unique\" identifier.\r\n * @returns The unique identifier.\r\n */\r\nexport function getUUID(): string {\r\n    let chr4 = () => Math.random().toString(16).slice(-4);\r\n    return chr4() + chr4() + '-' + chr4() + '-' + chr4() + '-' + chr4() + '-' + chr4() + chr4() + chr4();\r\n}","import streamDeckClient from './stream-deck-client';\r\nimport streamDeckConnection from './stream-deck-connection';\r\n\r\n/* The Stream Deck client */\r\nwindow.streamDeckClient = streamDeckClient;\r\n\r\nconst existing = window.connectElgatoStreamDeckSocket;\r\n\r\n/**\r\n * Called by the Stream Deck to enable registration of the property inspector.\r\n * @param inPort The port that should be used to create the WebSocket.\r\n * @param inPropertyInspectorUUID A unique identifier string to register Property Inspector with Stream Deck software.\r\n * @param inRegisterEvent The event type that should be used to register the plugin once the WebSocket is opened. For Property Inspector this is \"registerPropertyInspector\".\r\n * @param inInfo A json object containing information about the application.\r\n * @param inActionInfo A json object containing information about the action.\r\n */\r\nwindow.connectElgatoStreamDeckSocket = function (inPort: string, inPropertyInspectorUUID: string, inRegisterEvent: string, inInfo: string, inActionInfo: string): void {\r\n    if (existing) {\r\n        existing(inPort, inPropertyInspectorUUID, inRegisterEvent, inInfo, inActionInfo)\r\n    };\r\n\r\n    streamDeckConnection.connect(inPort, inPropertyInspectorUUID, inRegisterEvent, inInfo, inActionInfo);\r\n}\r\n","import {\r\n    ActionEventArgsWithPayload, ActionPayload, SettingsPayload, StreamDeckEventArgsWithPayload\r\n} from 'stream-deck';\r\n\r\nimport EventManager, { IEventSubscriber } from '../core/event-dispatcher';\r\nimport { delay } from '../core/timeout';\r\nimport streamDeckClient from './stream-deck-client';\r\nimport streamDeckConnection from './stream-deck-connection';\r\n\r\nexport interface IStoreObject {\r\n    value?: any;\r\n    change: IEventSubscriber<void>;\r\n}\r\n\r\n/**\r\n * Provides a store for managing settings stored within the Stream Deck.\r\n */\r\nclass Store {\r\n    private readonly _globalSettingsChange: EventManager<any> = new EventManager<any>();\r\n    private readonly _settingsChange: EventManager<any> = new EventManager<any>();\r\n\r\n    public get globalSettingsChange(): IEventSubscriber<any> {\r\n        return this._globalSettingsChange;\r\n    }\r\n    public get settingsChange(): IEventSubscriber<any> {\r\n        return this._settingsChange;\r\n    }\r\n\r\n    private globalSettings: any;\r\n    private settings: any;\r\n\r\n    /**\r\n     * Attaches the Stream Deck client to the store.\r\n     * @param client The Stream Deck client.\r\n     */\r\n    public connect(actionInfo: ActionEventArgsWithPayload<ActionPayload>): void {\r\n        streamDeckClient.didReceiveGlobalSettings.subscribe((data: StreamDeckEventArgsWithPayload<SettingsPayload>) => {\r\n            this.globalSettings = data.payload.settings;\r\n            this._globalSettingsChange.dispatch(this.globalSettings);\r\n        })\r\n\r\n        streamDeckClient.didReceiveSettings.subscribe((data: ActionEventArgsWithPayload<SettingsPayload>) => {\r\n            this.dispatchSettings(data);\r\n        })\r\n\r\n        this.dispatchSettings(actionInfo);\r\n        streamDeckClient.getGlobalSettings();\r\n    }\r\n\r\n    /**\r\n     * Registers the the given key as a setting to be persisted in the Stream Deck; when the settings change, the callback is invoked. This returns a function capable of persisting the value against the key.\r\n     * @param key The settings key.\r\n     * @param global Determines whether the setting is global.\r\n     * @param settingsChangeCallback The callback invoked when the settings change.\r\n     * @returns A delegate that allows for updating the store value.\r\n     */\r\n    public register(key: string, global: boolean, settingsChangeCallback: (value: any) => void): (value?: any) => void {\r\n        const settingsChangeHandler = (data: any): void => {\r\n            if (data) {\r\n                settingsChangeCallback(data[key]);\r\n            }\r\n        }\r\n\r\n        // Subscribe to changes.\r\n        if (global) {\r\n            store.globalSettingsChange.subscribe(settingsChangeHandler);\r\n        } else {\r\n            store.settingsChange.subscribe(settingsChangeHandler);\r\n        }\r\n\r\n        // Return the setter that allows for the value to be saved to the store.\r\n        return (value?: any) => {\r\n            store.set(key, value, global);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the value for the specified key on the action settings.\r\n     * @param key The settings key.\r\n     * @param value The settings value.\r\n     * @param global Determines whether the setting is a global setting.\r\n     */\r\n    public set(key: string, value?: any, global: boolean = false): void {\r\n        if (global) {\r\n            this.globalSettings[key] = value;\r\n            streamDeckClient.setGlobalSettings(this.globalSettings);\r\n        } else {\r\n            this.settings[key] = value;\r\n            streamDeckClient.setSettings(this.settings);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A wrapper function that monitors and maps changes to/from the value provider to/from the underlying store.\r\n     * @param obj The source object that provides value mapping.\r\n     * @param key The settings key.\r\n     * @param global Determines whether the setting is global.\r\n     * @param timeout The delay before the changes are saved; when undefined the save will occur on change.\r\n     */\r\n    public use(obj: IStoreObject, key: string, global: boolean, timeout: number | null = 250): void {\r\n        const save = store.register(key, global, (value?: any) => {\r\n            if (obj.value != value) {\r\n                obj.value = value || '';\r\n            }\r\n        });\r\n\r\n        if (timeout) {\r\n            obj.change.subscribe(delay(() => save(obj.value), timeout));\r\n        } else {\r\n            obj.change.subscribe(() => save(obj.value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispatches the settings change.\r\n     * @param data The data containing the settings.\r\n     */\r\n    private dispatchSettings(data: ActionEventArgsWithPayload<SettingsPayload>) {\r\n        this.settings = data.payload.settings;\r\n        this._settingsChange.dispatch(this.settings);\r\n    }\r\n}\r\n\r\nconst store = new Store();\r\n(async function () {\r\n    await streamDeckConnection.waitForConnection();\r\n\r\n    const connectionInfo = await streamDeckConnection.getConnectionInfo();\r\n    store.connect(connectionInfo.actionInfo);\r\n})();\r\n\r\nexport default store;\r\n","import { PropertyInspectorPayload } from 'sharp-deck';\r\nimport {\r\n    ActionEventArgsWithPayload, SettingsPayload, StreamDeckEventArgs, StreamDeckEventArgsWithPayload\r\n} from 'stream-deck';\r\n\r\nimport EventManager, { IEventSubscriber } from '../core/event-dispatcher';\r\nimport { getUUID } from '../core/utils';\r\nimport streamDeckConnection from './stream-deck-connection';\r\n\r\nenum Message {\r\n    // Sent.\r\n    GET_SETTINGS = 'getSettings',\r\n    GET_GLOBAL_SETTINGS = 'getGlobalSettings',\r\n    LOG_MESSAGE = 'logMessage',\r\n    OPEN_URL = 'openUrl',\r\n    SET_SETTINGS = 'setSettings',\r\n    SET_GLOBAL_SETTINGS = 'setGlobalSettings',\r\n    SEND_TO_PLUGIN = 'sendToPlugin',\r\n\r\n    // Received.\r\n    DID_RECEIVE_GLOBAL_SETTINGS = 'didReceiveGlobalSettings',\r\n    DID_RECEIVE_SETTINGS = 'didReceiveSettings',\r\n    SEND_TO_PROPERTY_INSPECTOR = 'sendToPropertyInspector'\r\n}\r\n\r\n/**\r\n * Provides a Stream Deck client wrapper for the connection.\r\n */\r\nexport class StreamDeckClient {\r\n    private readonly _didReceiveGlobalSettings: EventManager<StreamDeckEventArgsWithPayload<SettingsPayload>> = new EventManager<StreamDeckEventArgsWithPayload<SettingsPayload>>();\r\n    private readonly _didReceiveSettings: EventManager<ActionEventArgsWithPayload<SettingsPayload>> = new EventManager<ActionEventArgsWithPayload<SettingsPayload>>();\r\n\r\n    /**\r\n     * Initializes a new instance of the Stream Deck client class.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        streamDeckConnection.message.subscribe(this.onMessage.bind(this));\r\n    }\r\n\r\n    public get didReceiveGlobalSettings(): IEventSubscriber<StreamDeckEventArgsWithPayload<SettingsPayload>> { return this._didReceiveGlobalSettings; }\r\n    public get didReceiveSettings(): IEventSubscriber<ActionEventArgsWithPayload<SettingsPayload>> { return this._didReceiveSettings; }\r\n\r\n    /**\r\n     * Sends a `get` request to the plugin, utilising SharpDeck libraries `PropertyInspectorMethod` attribute.\r\n     * @param {string} event The name of the event or method, i.e. URI endpoint.\r\n     * @param {object} parameters The optional data that contains the parameters\r\n     * @returns {object} A promise containing the result.\r\n     */\r\n    public async get<T>(event: string, parameters?: any): Promise<StreamDeckEventArgsWithPayload<PropertyInspectorPayload<T>>> {\r\n        const request = {\r\n            event: event,\r\n            requestId: getUUID()\r\n        };\r\n\r\n        return await streamDeckConnection.get(\r\n            Message.SEND_TO_PLUGIN,\r\n            args => args.event == Message.SEND_TO_PROPERTY_INSPECTOR && args.payload && args.payload.requestId == request.requestId,\r\n            { data: { ...parameters }, ...request });\r\n    };\r\n\r\n    /**\r\n     * Gets the global settings.\r\n     * @returns The global settings as a promise.\r\n     */\r\n    public getGlobalSettings(): Promise<StreamDeckEventArgsWithPayload<SettingsPayload>> {\r\n        return streamDeckConnection.get(Message.GET_GLOBAL_SETTINGS, payload => payload.event == Message.DID_RECEIVE_GLOBAL_SETTINGS);\r\n    }\r\n\r\n    /**\r\n     * Sets the global settings.\r\n     * @param value The global settings.\r\n     */\r\n    public setGlobalSettings(value?: any): void {\r\n        streamDeckConnection.send(Message.SET_GLOBAL_SETTINGS, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the settings.\r\n     * @returns The settings as a promise.\r\n     */\r\n    public getSettings(): Promise<ActionEventArgsWithPayload<SettingsPayload>> {\r\n        return streamDeckConnection.get(Message.GET_SETTINGS, payload => payload.event == Message.DID_RECEIVE_SETTINGS);\r\n    }\r\n\r\n    /**\r\n     * Sets the settings.\r\n     * @param value The settings.\r\n     */\r\n    public setSettings(value?: any): void {\r\n        streamDeckConnection.send(Message.SET_SETTINGS, value);\r\n    }\r\n\r\n    /**\r\n     * Handles receiving a message from the connection.\r\n     * @param data The data received from the Stream Deck connection.\r\n     */\r\n    private onMessage(data: StreamDeckEventArgs): void {\r\n        switch (data.event) {\r\n            case Message.DID_RECEIVE_GLOBAL_SETTINGS:\r\n                this._didReceiveGlobalSettings.dispatch(<StreamDeckEventArgsWithPayload<SettingsPayload>>data);\r\n                break;\r\n\r\n            case Message.DID_RECEIVE_SETTINGS:\r\n                this._didReceiveSettings.dispatch(<ActionEventArgsWithPayload<SettingsPayload>>data);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nconst streamDeckClient = new StreamDeckClient();\r\nexport default streamDeckClient;\r\n","import {\r\n    ActionEventArgsWithPayload, ActionPayload, RegistrationInfo, StreamDeckEventArgs\r\n} from 'stream-deck';\r\n\r\nimport EventManager, { IEventSubscriber } from '../core/event-dispatcher';\r\nimport PromiseCompletionSource from '../core/promise-completion-source';\r\n\r\nexport interface IConnectionInfo {\r\n    actionInfo: ActionEventArgsWithPayload<ActionPayload>;\r\n    info: RegistrationInfo;\r\n    propertyInspectorUUID: string;\r\n    registerEvent: string;\r\n}\r\n\r\n/**\r\n * Provides a connection between the property inspector and the Stream Deck.\r\n */\r\nclass StreamDeckConnection {\r\n    private readonly _connection: PromiseCompletionSource<WebSocket> = new PromiseCompletionSource<WebSocket>();\r\n    private readonly _connectionInfo: PromiseCompletionSource<IConnectionInfo> = new PromiseCompletionSource<IConnectionInfo>();\r\n    private readonly _message: EventManager<StreamDeckEventArgs> = new EventManager();\r\n    private _webSocket?: WebSocket;\r\n\r\n    public get message(): IEventSubscriber<StreamDeckEventArgs> { return this._message; }\r\n\r\n    /**\r\n     * Connects to the Stream Deck.\r\n     * @param {string} port The port that should be used to create the WebSocket.\r\n     * @param {string} propertyInspectorUUID A unique identifier string to register Property Inspector with Stream Deck software.\r\n     * @param {string} registerEvent The event type that should be used to register the plugin once the WebSocket is opened. For Property Inspector this is \"registerPropertyInspector\".\r\n     * @param {string} info A JSON object containing information about the application.\r\n     * @param {string} actionInfo A JSON object containing information about the action.\r\n     */\r\n    public async connect(port: string, propertyInspectorUUID: string, registerEvent: string, info: string, actionInfo: string): Promise<void> {\r\n        if (!this._webSocket) {\r\n            this._connectionInfo.setResult({\r\n                actionInfo: JSON.parse(actionInfo),\r\n                info: JSON.parse(info),\r\n                propertyInspectorUUID: propertyInspectorUUID,\r\n                registerEvent: registerEvent\r\n            });\r\n\r\n            // Register the web socket.\r\n            this._webSocket = new WebSocket(`ws://localhost:${port}`);\r\n            this._webSocket.addEventListener('message', (ev: MessageEvent) => this._message.dispatch(JSON.parse(ev.data)));\r\n            this._webSocket.addEventListener('open', this.onOpen.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a request to the Stream Deck, and awaits the first message matching the `waitFor` parameter.\r\n     * @param {string} event The event name.\r\n     * @param {StreamDeckEventArgs|any} canCallback The delegate used to determine if the event fulfils the callback requirements.\r\n     * @param {StreamDeckEventArgs|any} payload The optional payload.\r\n     * @returns {object} The promise containing the result of the request.\r\n     */\r\n    public async get(event: string, canCallback: (payload: StreamDeckEventArgs | any) => boolean, payload?: StreamDeckEventArgs | any): Promise<any> {\r\n        const resolver = new PromiseCompletionSource<any>();\r\n\r\n        // Construct the temporary listener that is removed when the callback can be fulilled.\r\n        let listener: (args: StreamDeckEventArgs) => void;\r\n        listener = (args: StreamDeckEventArgs) => {\r\n            if (canCallback(args)) {\r\n                this.message.unsubscribe(listener);\r\n                resolver.setResult(args);\r\n            }\r\n        }\r\n\r\n        // Await message, and send the request.\r\n        this.message.subscribe(listener);\r\n        await this.send(event, payload);\r\n\r\n        return resolver.promise;\r\n    }\r\n\r\n    /**\r\n     * Gets the connection information, once it has been set.\r\n     * @returns The connection info.\r\n     */\r\n    public async getConnectionInfo(): Promise<IConnectionInfo> {\r\n        return this._connectionInfo.promise;\r\n    }\r\n\r\n    /**\r\n     * Sends a request to the Stream Deck.\r\n     * @param {string} event The event name.\r\n     * @param {any} payload The optional payload.\r\n     */\r\n    public async send(event: string, payload?: any): Promise<void> {\r\n        try {\r\n            const connectionInfo = await this._connectionInfo.promise;\r\n            const connection = await this._connection.promise;\r\n\r\n            connection.send(JSON.stringify({\r\n                event: event,\r\n                context: connectionInfo.propertyInspectorUUID,\r\n                payload: payload,\r\n                action: connectionInfo.actionInfo.action\r\n            }));\r\n        } catch {\r\n            console.error(`Unable to send request '${event}' as there is no connection.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Waits for an active connection to be established.\r\n     */\r\n    public async waitForConnection(): Promise<void> {\r\n        await this._connection.promise;\r\n    }\r\n\r\n    /**\r\n     * Handles the open event of the web socket.\r\n     * @param ev The event arguments.\r\n     */\r\n    private async onOpen(ev: any): Promise<void> {\r\n        try {\r\n            const connectionInfo = await this._connectionInfo.promise\r\n            if (this._webSocket) {\r\n                this._webSocket.send(JSON.stringify({\r\n                    event: connectionInfo.registerEvent,\r\n                    uuid: connectionInfo.propertyInspectorUUID\r\n                }));\r\n\r\n                this._connection.setResult(this._webSocket);\r\n            }\r\n        } catch (ex) {\r\n            this._connection.setException(ex);\r\n        }\r\n    }\r\n}\r\n\r\nconst streamDeckConnection = new StreamDeckConnection();\r\nexport default streamDeckConnection;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import './styles/index.css';\r\nimport './stream-deck/connect';\r\nimport './components/sdpi-range';\r\nimport './components/sdpi-select';\r\nimport './components/sdpi-color';\r\nimport './components/sdpi-text';\r\nimport './components/sdpi-button';\r\nimport './components/sdpi-content';\r\n\r\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","SDPIButton","render","root","input","cloneAttributeOrDefault","onclick","super","customElements","define","SDPIColor","SDPIContent","container","text","observedAttributes","attributeChangedCallback","attrName","oldValue","newValue","innerText","withAttribute","value","SDPIElement","HTMLElement","label","disabled","getAttribute","removeAttribute","connectedCallback","labelColumn","contentColumn","SDPIInput","_change","observedInputAttributes","change","isDelayed","_value","dispatch","global","hasAttribute","indexOf","addEventListener","propertyName","htmlFor","use","SDPIRange","components","minText","maxText","_","valueText","subscribe","SDPISelect","_disabled","refreshButton","refresh","click","dataSourceEndpoint","loadOptions","refreshEndpoint","observeChildList","added","request","get","setOnlyOption","dataSource","payload","setOptions","mapOptions","children","Array","createOptionGroup","createOption","clearOptions","forEach","option","add","SDPIText","tagName","classNames","classList","className","child","defaultValue","addedCallback","filter","MutationObserver","mutations","mutation","addedNodes","node","includes","nodeName","observe","childList","success","failure","handlers","args","handler","unsubscribe","h","childNodes","listener","optGroup","dispatchEvent","Event","constructor","reject","resolve","_promise","Promise","promise","setResult","setException","reason","callback","timeout","handle","clearTimeout","setTimeout","chr4","Math","random","streamDeckClient","existing","connectElgatoStreamDeckSocket","inPort","inPropertyInspectorUUID","inRegisterEvent","inInfo","inActionInfo","connect","store","_globalSettingsChange","_settingsChange","globalSettingsChange","settingsChange","actionInfo","didReceiveGlobalSettings","globalSettings","settings","didReceiveSettings","dispatchSettings","getGlobalSettings","register","key","settingsChangeCallback","settingsChangeHandler","set","setGlobalSettings","setSettings","save","delay","waitForConnection","connectionInfo","getConnectionInfo","Message","StreamDeckClient","_didReceiveGlobalSettings","_didReceiveSettings","message","onMessage","bind","event","parameters","requestId","getUUID","SEND_TO_PLUGIN","SEND_TO_PROPERTY_INSPECTOR","GET_GLOBAL_SETTINGS","DID_RECEIVE_GLOBAL_SETTINGS","send","SET_GLOBAL_SETTINGS","getSettings","GET_SETTINGS","DID_RECEIVE_SETTINGS","SET_SETTINGS","streamDeckConnection","_connection","_connectionInfo","_message","port","propertyInspectorUUID","registerEvent","info","_webSocket","parse","WebSocket","ev","onOpen","canCallback","resolver","context","action","console","error","uuid","ex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","m","n","getter","d","a","definition","o","Object","defineProperty","enumerable","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","b","baseURI","self","location","href"],"sourceRoot":""}